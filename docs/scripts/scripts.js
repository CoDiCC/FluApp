"use strict";angular.module("fluApp",["ngAnimate","ngCookies","ngSanitize","ngTouch","ui.bootstrap","ngCsv","schemaForm"]),angular.module("fluApp").controller("FormularioCtrl",["$scope","registos","schema","formDefinition",function(a,b,c,d){a.model={},a.schema=c,a.form=d.newForm(),a.registoForm=null,a.index=null,a.$on("edit-record",function(b,c){a.model=c.record,a.index=c.index}),a.onReset=function(b){b&&(b.$setPristine(),b.$setUntouched()),a.model={},a.$broadcast("schemaFormRedraw")},a.onSubmit=function(c){a.$broadcast("schemaFormValidate");for(var d in a.model)a.model.hasOwnProperty(d)&&a.model[d]&&/^data/.test(d)&&(a.model[d]=new Date(a.model[d]));c.$valid?(b.add(a.model),a.onReset(c),window.alert("Registo inserido com sucesso!")):window.alert("O formulário tem erros. Por favor verifique a informação (assinalada a vermelho).")}}]),angular.module("fluApp").controller("RegistosCtrl",["$scope","registos","$uibModal","CsvParser",function(a,b,c,d){a.headers=b.getHeaders(!0),a.props=b.getProps(),a.registos=b.getAll(),a.options={filename:"registos",fieldSeparator:";"},a.getArray=function(){return JSON.parse(angular.toJson(b.getAll()))},a.getHeaders=function(){return b.getHeaders()},a.getProps=function(){return b.getProps()},a.reset=function(){window.confirm("Deseja mesmo apagar todos os registos?")===!0&&(b.reset(),a.registos=b.getAll())},a.countSelected=function(){for(var b=a.registos.length-1,c=0,d=b;d>=0;--d)a.registos[d].$$selected===!0&&c++;return c},a.deleteRecord=function(){if(window.confirm("Deseja mesmo apagar o(s) registo(s) seleccionados?")===!0)for(var c=a.registos.length-1,d=c;d>=0;--d)a.registos[d].$$selected===!0&&b.remove(d);a.registos=b.getAll()},a.fileLoadModalOpen=function(){var e=c.open({ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"views/uploadfilemodal.html",controller:"OpenFileModalInstanceCtrl"});e.result.then(function(c){var e=d.parse(c);a.registos=[];try{b.setAll(e)}catch(f){window.alert(f)}a.registos=b.getAll()},function(){})},a.editRecordModalOpen=function(){if(1===a.countSelected()){for(var d=a.registos.length-1,e={},f=null,g=d;g>=0;--g)if(a.registos[g].$$selected===!0){e=angular.copy(a.registos[g]),f=g;for(var h in e)if(e.hasOwnProperty(h)&&/^data/.test(h)&&null!==e[h]&&""!==e[h])try{e[h]=new Date(e[h])}catch(i){e[h]=null}break}if(null!==f){var j=c.open({ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"views/editrecordmodal.html",controller:"EditrecordmodalCtrl",resolve:{record:function(){return e}}});j.result.then(function(c){b.set(f,c),a.registos=b.getAll()},function(){console.log("cancel")})}}}}]),angular.module("fluApp").factory("registos",["schema",function(a){var b=[],c=[],d=angular.copy(a);for(var e in a.properties)if(a.properties.hasOwnProperty(e)){var f;c.push(e),f=a.properties[e].hasOwnProperty("title")?a.properties[e].title:e,b.push(f),angular.isUndefined(a.properties[e].format)||"date"!==a.properties[e].format||(angular.isArray(a.properties[e].type)?d.properties[e].type.push("object"):d.properties[e].type=[d.properties[e].type,"object"])}var g=[],h=function(a){return a.hasOwnProperty("$$selected")||(a.$$selected=!1),a},i=function(a){if(!tv4.validate(a,d)){var b=tv4.error;throw console.log(b),new Error("in record --> "+b.dataPath+" because "+b.message)}return!0};return{getHeaders:function(){return b},getProps:function(){return c},get:function(a){return g[a]},insertAt:function(a,b){return g.splice(a,0,b)},set:function(a,b){if(!angular.isNumber(a))throw new Error("index parameter should be an integer");return i(b)?(g[a]=h(b),a):null},add:function(a){if(!angular.isObject(a)&&!angular.isArray(a))throw new Error("record parameter should be an object or an array");return i(a)?g.push(h(a))-1:null},remove:function(a){return g.splice(a,1)[0]},getAll:function(){return g},setAll:function(a){g=[];for(var b=0;b<a.length;++b)i(a[b])&&g.push(h(a[b]));return g},reset:function(){return g=[]}}}]),angular.module("fluApp").factory("schema",function(){return{$schema:"http://json-schema.org/draft-04/schema#",id:"http://example.com/example.json",type:"object",required:["hospital","numprocessoclinico","datadeadmissao","sexo","datanascimento","datainiciosintomas","vacinado","doencacronica","gravidez","feztratamento","fezprocedimento","colheuamostrabiologica","serotipagem","datalaboratorio","dataalta","obito"],properties:{hospital:{id:"/properties/hospital",title:"Hospital",description:"Hospital/Centro Hospitalar",type:"string","enum":["British Hospital","Centro Hospitalar Cova da Beira - Hospital Pêro da Covilhã","Centro Hospitalar de São João - Hospital São João","Centro Hospitalar do Alto Ave - Hospital da Senhora da Oliveira, Guimarães","Centro Hospitalar e Universitário de Coimbra - Hospitais da Universidade de Coimbra","Centro Hospitalar Lisboa Central - Hospital Curry Cabral","Centro Hospitalar Lisboa Central - Hospital D. Estefânia","Centro Hospitalar Lisboa Central - Hospital Santa Marta","Centro Hospitalar Lisboa Central - Hospital São José","Centro Hospitalar Lisboa Norte - Hospital de Santa Maria","Centro Hospitalar Lisboa Norte - Hospital Pulido Valente","Centro Hospitalar Lisboa Ocidental - Hospital de São Francisco Xavier","Centro Hospitalar Médio Tejo (Hospital Dr. Manoel Constâncio Abrantes)","Centro Hospitalar Tondela Viseu - Hospital de São Teotónio","CUF Descobertas","Hospital Beatriz Ângelo","Hospital de Cascais Dr. José de Almeida","Hospital do Divino Espírito Santo de Ponta Delgada (Açores)","Hospital dos Lusíadas","Hospital Professor Doutor Fernando Fonseca","Hospital Vila Franca de Xira","Unidade Local de Saúde Castelo Branco - Hospital Amato Lusitano","Unidade Local de Saúde do Litoral Alentejano - Hospital do Litoral Alentejano"]},numprocessoclinico:{id:"/properties/numprocessoclinico",title:"N.º processo clínico",description:"Número do processo clínico no hospital",type:"string"},datadeadmissao:{id:"/properties/datadeadmissao",title:"Data de admissão",type:"string",description:"Data de Admissão na UCI",format:"date"},sexo:{id:"/properties/sexo",title:"Sexo",description:"Sexo do utente",type:"string","enum":["M","F","O"]},datanascimento:{id:"/properties/datanascimento",title:"Data de Nascimento",description:"Data de nascimento do utente",type:"string",format:"date"},datainiciosintomas:{id:"/properties/datainiciosintomas",title:"Data de início de sintomas",type:"string",format:"date"},vacinado:{id:"/properties/vacinado",title:"Vacinado",description:"O doente foi vacinado contra a gripe nesta época?",type:"string","enum":["Y","N","UNK"]},doencacronica:{id:"/properties/doencacronica",title:"Doença Crónica",description:"O doente tem alguma doença crónica?",type:"string","enum":["Y","N","UNK"]},asma:{id:"/properties/asma",title:"Asma",type:["boolean","null"]},dpoc:{id:"/properties/dpoc",title:"DPOC",type:["boolean","null"]},diabetes:{id:"/properties/diabetes",title:"Diabetes",type:["boolean","null"]},doencaoncologica:{id:"/properties/doencaoncologica",title:"Doença Oncológica",type:["boolean","null"]},doencacardiacacronica:{id:"/properties/doencacardiacacronica",title:"Doença Cardíaca Crónica",type:["boolean","null"]},hiv:{id:"/properties/hiv",title:"VIH (ou outras imunodeficiências)",type:["boolean","null"]},doencarenalcronica:{id:"/properties/doencarenalcronica",title:"Doença Renal Crónica",type:["boolean","null"]},doencahepaticacronica:{id:"/properties/doencahepaticacronica",title:"Doença Hepática Crónica",type:["boolean","null"]},doencaneuromuscular:{id:"/properties/doencaneuromuscular",title:"Doença Neuromuscular",type:["boolean","null"]},obesidade:{id:"/properties/obesidade",title:"Obesidade",description:"IMC > 29,9kg/m2",type:["boolean","null"]},gravidez:{id:"/properties/gravidez",title:"Gravidez",type:"string","enum":["Y","N","UNK"]},feztratamento:{id:"/properties/feztratamento",title:"Fez tratamento",type:"string","enum":["Y","N","UNK"]},oseltamivir:{id:"/properties/oseltamivir",title:"Oseltamivir",type:["boolean","null"]},zanamivir:{id:"/properties/zanamivir",title:"Zanamivir",type:["boolean","null"]},datatratamento:{id:"/properties/datatratamento",title:"Data do tratamento",type:["string","null"],format:"date"},fezprocedimento:{id:"/properties/fezprocedimento",title:"Realizou procedimento",description:"Realizou algum dos seguintes procedimentos durante internamento?",type:"string","enum":["Y","N","UNK"]},vni:{id:"/properties/vni",title:"Ventilação mecânica não invasiva",description:"CPAP ou BIPAP",type:["boolean","null"]},intubacao:{id:"/properties/intubacao",title:"Ventilação mecânica invasiva",type:["boolean","null"]},ecmo:{id:"/properties/ecmo",title:"ECMO",type:["boolean","null"]},dialise:{id:"/properties/dialise",title:"Técnica de substituição renal",type:["boolean","null"]},colheuamostrabiologica:{id:"/properties/colheuamostrabiologica",title:"Colheu amostra bioológica",type:"string","enum":["Y","N","UNK"]},zaragatoa:{id:"/properties/zaragatoa",title:"Zaragatoa naso ou orofaríngea",type:["boolean","null"]},lavadoalveolar:{id:"/properties/lavadoalveolar",title:"Aspirado endotraqueal ou lavado broncoalveolar",type:["boolean","null"]},biopsia:{id:"/properties/lavadoalveolar",title:"Biópsia tecidular post-mortem",type:["boolean","null"]},serotipagem:{id:"/properties/serotipagem",title:"Tipo e subtipo do vírus",type:"string","enum":["A","AH1","AH1N1","AH3","AH3N2","AH5","AH5N1","B","BVic","BYam","PanAH1","PanAH1N1","UNK","O"]},datalaboratorio:{id:"/properties/datalaboratorio",title:"Data da confirmação laboratorial",type:"string",format:"date"},dataalta:{id:"/properties/dataalta",title:"Data da alta",description:"Data de Alta na UCI",type:"string",format:"date"},obito:{id:"/properties/obito",title:"Óbito?",description:"O utente faleceu?",type:"string","enum":["Y","N","UNK"]},dataobito:{id:"/properties/dataobit",title:"Data do óbito",description:"Data do óbito (se aplicável)",type:["string","null"],format:"date"},observacoes:{id:"/properties/observacoes",title:"Observações",type:["string","null"]}}}}),angular.module("fluApp").factory("formDefinition",function(){var a=function(a){return a?new Date(a)<=new Date:!0},b=[{type:"fieldset",title:"Informações administrativas",items:[{key:"hospital"},{key:"numprocessoclinico"},{key:"datadeadmissao",type:"date",validationMessage:{datadeadmissaoNoFuturo:"Data de admissão não pode ser no futuro",dataAdmissaoAposAlta:"Data de admissão não pode ser posterior à data de alta"},$validators:{dataAdmissaoAposAlta:function(a,b,c){return a&&c.dataalta?new Date(a)<=new Date(c.dataalta):!0},datadeadmissaoNoFuturo:function(a){return a?new Date(a)<=new Date:!0}}},{key:"sexo",type:"radiobuttons",titleMap:[{value:"M",name:"Masculino"},{value:"F",name:"Feminino"},{value:"O",name:"Outro"}],description:"Transsexuais devem ser incluidos em 'outro'",validationMessage:{gravidezNoHomem:"Não pode seleccionar sexo masculino e gravidez"},$validators:{gravidezNoHomem:function(a,b,c){return c.gravidez&&a?!("Y"===c.gravidez&&"M"===a):!0}}},{key:"datanascimento",type:"date",validationMessage:{nascimentoNoFuturo:"Data de nascimento não pode ser numa data futura"},$validators:{nascimentoNoFuturo:a}}]},{type:"fieldset",title:"Sintomas e vacinação",items:[{key:"datainiciosintomas",type:"date",validationMessage:{inicioSintomasNoFuturo:"Início de sintomas não pode ser no futuro"},$validators:{inicioSintomasNoFuturo:a}},{key:"vacinado",type:"radiobuttons",titleMap:[{value:"Y",name:"Sim"},{value:"N",name:"Não"},{value:"UNK",name:"Desconhecido"}]}]},{type:"fieldset",title:"Doença Crónica",items:[{key:"doencacronica",type:"radiobuttons",titleMap:[{value:"Y",name:"Sim"},{value:"N",name:"Não"},{value:"UNK",name:"Desconhecido"}]},{type:"fieldset",condition:'model.doencacronica === "Y"',items:[{key:"asma"},{key:"dpoc"},{key:"diabetes"},{key:"doencaoncologica"},{key:"doencacardiacacronica"},{key:"hiv"},{key:"doencarenalcronica"},{key:"doencahepaticacronica"},{key:"doencaneuromuscular"},{key:"doencaneurocognitiva"},{key:"obesidade"}]},{key:"gravidez",description:"Está grávida?",type:"radiobuttons",titleMap:[{value:"Y",name:"Sim"},{value:"N",name:"Não"},{value:"UNK",name:"Desconhecido"}],validationMessage:{gravidezNoHomem:"Não pode seleccionar sexo masculino e gravidez"},$validators:{gravidezNoHomem:function(a,b,c){return a&&c.sexo?!("Y"===a&&"M"===c.sexo):!0}}}]},{type:"fieldset",title:"Tratamento",items:[{key:"feztratamento",type:"radiobuttons",titleMap:[{value:"Y",name:"Sim"},{value:"N",name:"Não"},{value:"UNK",name:"Desconhecido"}]},{type:"fieldset",condition:'model.feztratamento === "Y"',items:[{key:"oseltamivir"},{key:"zanamivir"}]}]},{type:"fieldset",title:"Procedimentos",items:[{key:"fezprocedimento",type:"radiobuttons",titleMap:[{value:"Y",name:"Sim"},{value:"N",name:"Não"},{value:"UNK",name:"Desconhecido"}]},{type:"fieldset",condition:'model.fezprocedimento === "Y"',items:[{key:"vni"},{key:"intubacao"},{key:"ecmo"},{key:"dialise"}]}]},{type:"fieldset",title:"Amostra Biológica",items:[{key:"colheuamostrabiologica",type:"radiobuttons",titleMap:[{value:"Y",name:"Sim"},{value:"N",name:"Não"},{value:"UNK",name:"Desconhecido"}]},{type:"fieldset",condition:'model.colheuamostrabiologica === "Y"',items:[{key:"zaragatoa"},{key:"lavadoalveolar"},{key:"biopsia"}]}]},{type:"fieldset",title:"Resultado Laboratorial",items:[{key:"serotipagem",titleMap:[{value:"UNK",name:"Desconhecido"},{value:"A",name:"A, sem sub-tipo"},{value:"AH1",name:"A(H1), sem sub-tipo N"},{value:"AH1N1",name:"A(H1N1)"},{value:"AH3",name:"A(H3), sem sub-tipo N"},{value:"AH3N2",name:"A(H3N2)"},{value:"AH5",name:"A(H5), sem sub-tipo N"},{value:"AH5N1",name:"A(H5N1)"},{value:"B",name:"linhagem indeterminada"},{value:"BVic",name:"Influenza type B, Victoria lineage"},{value:"BYam",name:"Influenza type B, Yamagata lineage"},{value:"PanAH1",name:"A(H1)pdm09"},{value:"PanAH1N1",name:"A(H1N1)pdm09"},{value:"O",name:"Outro"}]},{key:"datalaboratorio",type:"date",validationMessage:{altaAntesDeHospitalizacao:"Data da Alta não pode ser anterior à Data de Admissão na UCI",altaNoFuturo:"Data de alta não pode ser numa data futura"},$validators:{altaNoFuturo:a,altaAntesDeHospitalizacao:function(a,b,c){return a&&c.datadeadmissao?new Date(c.datadeadmissao)<=new Date(a):!0}}}]},{type:"fieldset",title:"Alta/Óbito",items:[{key:"dataalta",type:"date",validationMessage:{altaAntesDeHospitalizacao:"Data da Alta não pode ser anterior à Data de Admissão na UCI",altaNoFuturo:"Data de alta não pode ser numa data futura"},$validators:{altaNoFuturo:a,altaAntesDeHospitalizacao:function(a,b,c){return a&&c.datadeadmissao?new Date(c.datadeadmissao)<=new Date(a):!0}}},{key:"obito",type:"radiobuttons",titleMap:[{value:"Y",name:"Sim"},{value:"N",name:"Não"},{value:"UNK",name:"Desconhecido"}]},{type:"fieldset",title:"Se óbito...",condition:'model.obito === "Y"',items:[{key:"dataobito",type:"date",validationMessage:{dataobitoNoFuturo:"Data do Óbito não pode ser no futuro"},$validators:{dataobitoNoFuturo:a}}]}]},{type:"fieldset",title:"Observações",items:[{key:"observacoes",type:"textarea"}]}];return{newForm:function(){var a=angular.copy(b);return a.push({type:"fieldset",title:"Acções",htmlClass:"stretch-all",items:[{type:"submit",title:"Carregar"},{type:"button",title:"Reset",fieldHtmlClass:"btn-danger"}]}),a},editForm:function(){return angular.copy(b)}}}),angular.module("fluApp").factory("FileReader",["$q","$window",function(a,b){var c=function(a,b,c){return function(){c.$apply(function(){b.resolve(a.result)})}},d=function(a,b,c){return function(){c.$apply(function(){b.reject(a.result)})}},e=function(a,b){return function(a){b.$broadcast("fileProgress",{total:a.total,loaded:a.loaded})}},f=function(a,f){var g=new b.FileReader;return g.onload=c(g,a,f),g.onerror=d(g,a,f),g.onprogress=e(g,f),g},g=function(b,c){var d=a.defer(),e=f(d,c);return e.readAsDataURL(b),d.promise},h=function(b,c,d){var e=a.defer(),g=f(e,d);return g.readAsText(b,c),e.promise},i=function(b,c){var d=a.defer(),e=f(d,c);return e.readAsBinaryString(b),d.promise};return{readAsDataURL:g,readAsBinaryString:i,readAsText:h}}]),angular.module("fluApp").controller("OpenFileModalInstanceCtrl",["$uibModalInstance","$scope","FileReader",function(a,b,c){b.file=null,b.ok=function(){if(!b.file)return void a.dismiss("cancel");var d=c.readAsText(b.file,"",b);a.close(d)},b.cancel=function(){a.dismiss("cancel")}}]),angular.module("fluApp").directive("ngFileSelect",function(){return{link:function(a,b){b.bind("change",function(b){a.file=(b.srcElement||b.target).files[0]})}}}),angular.module("fluApp").service("CsvParser",function(){var a=";";return{setDelimiter:function(b){a=b},parse:function(b){b=b.replace(/\r\n/g,"\n");for(var c=b.split("\n"),d=c.shift().split(a),e=c.length;e>=0;--e)if(c[e]){for(var f=c[e].split(a),g={},h=0;h<d.length;++h)if(!angular.isUndefined(f[h])){var i=f[h];i=i.replace(/^"*/,"").replace(/"*$/,""),i=i.trim(),""===i?i=null:"TRUE"===i||"true"===i?i=!0:"FALSE"===i||"false"===i?i=!1:/^\d+$/.test(i)&&(i=parseInt(i)),g[d[h]]=i}c[e]=g}else c.splice(e,1);return c}}}),angular.module("fluApp").controller("EditrecordmodalCtrl",["$uibModalInstance","$scope","registos","schema","formDefinition","record",function(a,b,c,d,e,f){b.model=f,b.schema=d,b.form=e.editForm(),b.ok=function(){a.close(b.model)},b.cancel=function(){a.dismiss("cancel")}}]),angular.module("fluApp").run(["$templateCache",function(a){a.put("views/editrecordmodal.html",'<div class="modal-header"> <h4>Editar Registo</h4> </div> <div class="modal-body"> <form id="editRecordForm" name="editRecordForm" sf-schema="schema" data-sf-form="form" data-sf-model="model"></form> </div> <div class="modal-footer"> <button class="btn btn-primary" ng-click="ok()">Guardar</button> <button class="btn" ng-click="cancel()">Cancelar</button> </div>'),a.put("views/formulario.html",'<header> <h2>Formulário</h2> </header> <section> <form id="registoForm" name="registoForm" sf-schema="schema" data-sf-form="form" data-sf-model="model" ng-submit="onSubmit(registoForm)"></form> </section> '),a.put("views/instrucoes.html","<header> <h2>Instruções</h2> </header> <section> <h3>Lorem Ipsum</h3> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque sed orci turpis. Etiam turpis massa, auctor at hendrerit nec, tincidunt quis dui. In pellentesque ultricies arcu nec imperdiet. Mauris ac pellentesque justo. Phasellus tristique, nisl tempus condimentum gravida, est velit lobortis quam, dictum vulputate orci justo eget libero. Donec convallis maximus metus, eu commodo purus malesuada quis. Praesent sagittis massa in laoreet condimentum. Cras mi ipsum, maximus vel erat et, pulvinar consectetur nibh. Duis non arcu rhoncus, dapibus odio non, convallis nulla. Etiam orci mauris, aliquam ac tellus lacinia, ullamcorper tincidunt dui. Suspendisse potenti. Nulla turpis nunc, semper eget eleifend vitae, congue et diam.</p> <h3>Dolor sit Amet</h3> <p>Cras scelerisque urna in urna facilisis pulvinar. Nullam laoreet ultrices ullamcorper. Vestibulum a pellentesque lorem. Duis efficitur ligula eu purus porttitor, et egestas tortor bibendum. Nam et lectus tincidunt, interdum leo quis, ornare quam. Aliquam vestibulum nulla lectus, vitae eleifend massa dignissim ac. In sollicitudin ex at dui mattis porttitor. Nulla a euismod urna, ac consequat neque. Curabitur finibus quis tortor ut cursus. Nulla dapibus at eros vel gravida. Nulla sit amet nunc tortor. Pellentesque metus nunc, egestas in aliquet eget, porta eget leo.</p> <p>Nulla facilisi. In nec orci vel ligula varius rutrum a eu quam. Nunc gravida purus ut tellus tempus ultricies. Nullam et ante sed enim laoreet luctus ornare id lacus. Aliquam at nulla turpis. Morbi tempor urna a diam aliquet pulvinar. Integer porttitor turpis et ligula mollis molestie in id odio.</p> </section>"),a.put("views/registos.html",'<header> <h2>Registos</h2> </header> <section id="registos" class="table-responsive"> <div class="panel panel-default"> <!-- Default panel contents --> <div class="panel-heading panel-button-top"> <!-- guardar como CSV --> <span class="fa-btn" ng-csv="getArray" data-csv-header="getProps()" data-csv-column-order="getProps()" data-filename="{{options.filename}}.csv" data-field-separator="{{ options.fieldSeparator }}" data-tooltip-placement="bottom" uib-tooltip="Guardar ficheiro"> <i class="fa fa-lg fa-fw fa-floppy-o"></i> </span> <!-- Abrir ficheiro CSV --> <span class="fa-btn" ng-click="fileLoadModalOpen()" data-tooltip-placement="bottom" uib-tooltip="Abrir ficheiro"> <i class="fa fa-lg fa-fw fa-folder-open-o"></i> </span> <!-- Editar registo --> <span class="fa-btn" ng-show="countSelected() === 1" ng-click="editRecordModalOpen()" data-tooltip-placement="bottom" uib-tooltip="Editar registo seleccionado"> <i class="fa fa-lg fa-fw fa-pencil"></i> </span> <!-- Apagar registo seleccionado --> <span class="fa-btn" ng-click="deleteRecord()" data-tooltip-placement="bottom" uib-tooltip="Apagar registo seleccionado"> <i class="fa fa-lg fa-fw fa-eraser" aria-hidden="true"></i> </span> <!-- Apagar todos os registos --> <span class="fa-btn" ng-click="reset()" data-tooltip-placement="bottom" uib-tooltip="Apagar todos os registos"> <i class="fa fa-lg fa-fw fa-trash-o" aria-hidden="true"></i> </span> </div> <div class="panel-table-wrapper"> <table class="table table-condensed table-hover table-overflow-x"> <thead class="thead-inverse"> <tr> <th></th> <th>#</th> <th ng-repeat="header in headers">{{::header}}</th> </tr> </thead> <tbody> <tr ng-repeat="item in registos" ng-class="{\'info\': item.$$selected}" ng-click="item.$$selected = !item.$$selected"> <th class="table-select-row"> <i class="fa" ng-class="{\'fa-square-o\': !item.$$selected, \'fa-check-square-o\': item.$$selected}" aria-hidden="true"></i> </th> <th>{{ $index }}</th> <td ng-repeat="prop in props">{{::item[prop]}}</td> </tr> </tbody> </table> </div> </div> </section>'),a.put("views/uploadfilemodal.html",'<div class="modal-header"> <h4>Seleccionar ficheiro</h4> </div> <div class="modal-body"> <input class="btn btn-primary" ng-file-select="onFileSelect($files)" type="file" accept=".csv"> </div> <div class="modal-footer"> <button class="btn btn-primary" ng-click="ok()">Ok</button> <button class="btn" ng-click="cancel()">Cancelar</button> </div>')}]);